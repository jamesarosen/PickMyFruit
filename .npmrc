# require pnpm to use the same node version as the project (match this version in CI/CD config for consistent publishing)
use-node-version=20.14.0

# only resolve local deps to local files with symlinks when `workspace:` protocol is used to improve predictability
link-workspace-packages=false

# use `workspace:` protocol but do not use specific versions (rolling)
save-workspace-protocol=rolling

# ensure packages can only be published from the main branch
publish-branch=main

# require pnpm to use exct versions when installing packages via `pnpm add` (safest) e.g. "1.1.1" vs. "^1.1.1"
# save-prefix=""

# associate a given scope with a given registry (useful for private packages)
# @example:registry=https://registry.npmjs.org
# @example:registry=https://npm.pkg.github.com

# set the default registry for all packages
# registry=https://registry.npmjs.org
# registry=http://localhost:4873
# registry=https://npm.pkg.github.com

# reference a registry auth token from environment variable
# //registry.npmjs.org/:_authToken=${NPM_TOKEN}

# strict-peer-dependencies=false
# auto-install-peers=true

# the following may be required for using astro or other frameworks with pnpm in certain cases
# shamefully-hoist=true

# if experiencing issues with tests one can try to only hoist the test dependencies instead of hoisting everything
# @see https://pnpm.io/npmrc#dependency-hoisting-settings (so far no issues)
# public-hoist-pattern[]=@vitest/expect # if using vitest
# public-hoist-pattern[]=@jest/expect # if using jest

# allow pnpm to run scripts (may be required for pagefind if using a postbuild script)
# ignore-scripts=false

# allow pnpm to run pre/post scripts (may be required for pagefind if using a postbuild script)
# @see https://pnpm.io/cli/run#enable-pre-post-scripts
# enable-pre-post-scripts=true

# engine-strict=true
# strict-peer-dependencies=true
# auto-install-peers=true
